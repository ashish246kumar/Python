Data Engineering ek field hai jo data collection, storage, processing aur transformation ke processes ko design aur optimize karne ka kaam karti hai. 
Iska main goal raw data ko useful information me convert karna hota hai, jo ki data analysis aur machine learning models ke liye helpful hota hai.
*************
Data Engineering ka Role:
Data Collection: Alag-alag sources (databases, APIs, logs, IoT devices) se data ko collect karna.
Data Cleaning & Processing: Raw data me errors, duplicates, aur missing values ko fix karna.
Data Storage: Data warehouses (Snowflake, Redshift) aur data lakes (S3, Hadoop) ka use karke data ko efficiently store karna.
ETL Pipelines: Extract, Transform, Load (ETL) processes design karna jo data ko structured form me convert karein.
Big Data Technologies: Apache Spark, Hadoop, Kafka jaise tools ka use karna large-scale data processing ke liye.
***************************************
 Feature	Data Engineer	Data Scientist
Focus	Data Infrastructure & Pipelines	Data Analysis & Machine Learning
Tools	SQL, Spark, Kafka, Hadoop	Python, R, TensorFlow, Scikit-learn
Outcome	Clean & Structured Data	Insights & Predictions 
**************
Ek Data Pipeline raw data ko meaningful insights me convert karta hai aur data-driven decision-making ke liye important role play karta hai. 🚀
*********
  1️⃣ Batch Processing Pipeline
Ye pipeline fixed intervals (jaise har din, har ghante) par data process karti hai.
 Real-Time (Streaming) Pipeline
Ye continuous data stream ko process karti hai
***********
  What are some common challenges in data engineering? 
Common challenges in data engineering include:

Handling large volumes of data efficiently
Ensuring data quality and consistency
Managing real-time data processing
************************
7. What are the main differences between SQL and NoSQL databases?
 1)SQL aur NoSQL databases data storage, structure, scalability, aur use cases ke basis par alag-alag hain.
SQL (Relational Database): Structured tables me rows aur columns ka format follow karta hai. 
🔹 NoSQL (Non-Relational Database): Flexible structure hota hai, aur different formats me store ho sakta hai:
✅ Document-based (MongoDB, CouchDB) – JSON-like format
✅ Key-Value (Redis, DynamoDB) – Key-value pairs

SQL: Vertically Scalable (Large server ya RAM badhakar scale karna hota hai).
🔹 NoSQL: Horizontally Scalable (Multiple servers add karke easily scale hota hai – distributed
 SQL: Structured Query Language (SQL) use karta hai – SELECT, INSERT, UPDATE, DELETE.
🔹 NoSQL: Standardized query language nahi hota, different databases ka apna query syntax hota hai

Use Cases
Factor	SQL Databases	NoSQL Databases
Best for	Structured, transactional data	Unstructured, semi-structured, real-time data
Examples	MySQL, PostgreSQL, Oracle, MS SQL Server	MongoDB, Cassandra, Redis, Neo4j
Use Cases	Banking, ERP, CRM, E-commerce orders	Social media, IoT, Big Data, Real-time apps
********
Fixed Schema (Less Flexibility)-> in sql
Fixed Schema (Less Flexibility)
Strict Schema Design hota hai, iska matlab table ka structure pehle define karna padta hai aur dynamic changes difficult hote hain
Complex Joins hone par performance slow ho jata hai, specially millions of records hone par.
Disadvantages of NoSQL Databases
🔹 1. Lack of Standard Query Language (No Standardization)
NoSQL databases eventual consistency follow karte hain, jo real-time applications ke liye fast hai, lekin banking jaise applications ke liye risk ho sakta hai.
NoSQL me denormalization hoti hai, iska matlab data duplicate store hota hai, jo zyada storage consume karta hai
**********************






  
