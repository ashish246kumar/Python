Why there is need of virtual envornment in python
virtual enviornment help us to maintain different version of project in the same machine or different project having different version  in the same machine.
virtual enviornment do this by creating isolated enviornment for a project that does not interfere with your system enviornment.
python -m venv Python_Basics_Assignment---->To create virtual enviornment
python --version

Python_Basics_Assignment\Scripts\activate:- command to activate vitual enviornment
pip freeze-->to check what package is installed in your system
************************************************************************************************************************************************************************************
slicing in python 
sequence[start:stop:step]
sequence = [0, 1, 2, 3, 4, 5]
print(sequence[1:4])  # Output: [1, 2, 3]
****
2. Omitting start or stop
sequence = [0, 1, 2, 3, 4, 5]
print(sequence[:3])  # Output: [0, 1, 2]
print(sequence[3:])  # Output: [3, 4, 5]
*****
Using step
The step parameter allows you to skip elements. If the step is 2, for example, every second element is taken.
sequence = [0, 1, 2, 3, 4, 5, 6, 7]
print(sequence[::2])  # Output: [0, 2, 4, 6]
******
Negative step (Reversing a Sequence)
sequence = [0, 1, 2, 3, 4, 5]
print(sequence[::-1])  # Output: [5, 4, 3, 2, 1, 0]
*****************************************************
pip install mypy-->
******************************************************************************************************************
In Python, using __all__ in __init__.py specifies which names should be imported when using from <module> import *.
 However, __all__ does not restrict direct imports in other ways. You can still access any function directly from the files within a module, regardless of __all__.
****************************************************************************************************************************************************
self is used to bind the actual object with the value
*******************************
class allow to create there own data type with there own attribute and method
*********************************
The constructor is defined using the __init__ method
**********************************************************************************************************
What’s the difference between a class and an object? A class is a blueprint or template, 
while an object is an instance created from that template, with specific attribute values.
******************************************************************************************************************
Methods that don’t use the self parameter (work at class level)
********************************************************************************************************

