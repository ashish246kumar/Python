Generator interview qestion
************************************************************
6. Write a Python program to implement a generator that yields all possible combinations of a given list of elements.

def get_combinations(lst):
    """Returns a list of all possible combinations of the given list"""
    result = []
    n = len(lst)
    
    # Outer loop for combination lengths (1 to n)
    for r in range(1, n + 1):
        # Inner loop to generate combinations of length r
        def generate_combinations(start, combo):
            if len(combo) == r:
                result.append(tuple(combo))  # Store as tuple to match itertools output
                return
            for i in range(start, n):
                generate_combinations(i + 1, combo + [lst[i]])

        generate_combinations(0, [])

    return result

# Example usage
elements = [1, 2, 3]
combinations_list = get_combinations(elements)
for combo in combinations_list:
    print(combo)
*******************************************
fibonacci_generator

*************************************************************************************
def find(n):
  a,b=0,1
  for i in range(n):
    c=a+b
    a=b
    b=c
    yield c
for i in find(10):
  print(i)   
*****************************************************
primee generator
*********
def isPrime(n):
  if n<2:
    return False
  b=n//2
  for i in range(2,b+1):
    if n%i==0:
      return False
  return True


def find(a,b):
  for i in range(a,b+1):
    if isPrime(i):
      yield i
a=find(3,8)  
for i in a:
  print(i)    

******************************
def isPrime(n):
  if n<2:
    return False
  b=n//2
  for i in range(2,b+1):
    if n%i==0:
      return False
  return True


def find(n):
    i=n
    while True:
      if isPrime(i):
        yield i
      i+=1
a=find(2)  
for i in range(10):
  print(next(a))    
***************



     



     








